Tests for print_sorted function:

==============================================================
>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

>>> geometry = BaseGeometry()
	
test not implemented:

	>>> geometry.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

valid input:

	>>> geometry = BaseGeometry()
	>>> geometry.integer_validator("side_length", 5)

string:

	>>> BaseGeometry.integer_validator("string", "not integer")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

negative integer:

	>>> BaseGeometry.integer_validator("side_length", -7)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

input None:

	>>> BaseGeometry.integer_validator("side_length", None)
	Traceback (most recent call last):
		...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

bool:
		
	>>> BaseGeometry.integer_validator("bool", False)
	Traceback (most recent call last):
                ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

tuple:

        >>> BaseGeometry.integer_validator("tuple", (50, 78))
        Traceback (most recent call last):
                ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

list:

        >>> BaseGeometry.integer_validator("list", [1, 2, 3])
        Traceback (most recent call last):
                ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

set:

        >>> BaseGeometry.integer_validator("set", {"un", "du", "twa"})
        Traceback (most recent call last):
                ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'


